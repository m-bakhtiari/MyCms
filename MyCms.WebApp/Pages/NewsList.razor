@page "/NewsList/{Id?}/{Title?}"
@using MyCms.Domain.Dto
@using MyCms.WebApp.Models

<Breadcrumbs CategoryId="@int.Parse(Id)" CategoryTitle="@Title"></Breadcrumbs>
<div class="main-container container" id="main-container">
    <div class="row">
        <div class="col-lg-8 blog__content mb-72">
            <h1 class="page-title">@Title</h1>
            @foreach (var item in NewsModel.Items)
            {
                <Article NewsDto="@item"></Article>
            }
            <nav class="pagination">
                @for (var i = 1; i <= PageCount; i++)
                {
                    var j = i;
                    <a style="cursor: pointer" class="pagination__page @(PageId==i?"pagination__page--current text-light":"") fw-bold" @onclick="()=>MoveToPage(j)">@i</a>
                }
            </nav>
        </div>
        <FavoriteNewsBar></FavoriteNewsBar>
    </div>
</div>

@code
{
    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string Title { get; set; }

    private int PageId { get; set; } = 1;
    private int PageCount { get; set; }

    private PagedResult<NewsDto, NewsSearchItem> NewsModel { get; set; } = new PagedResult<NewsDto, NewsSearchItem>() { Items = new List<NewsDto>() };

    protected override async Task OnParametersSetAsync()
    {
        await GetPageData();
    }

    private async Task MoveToPage(int pageId)
    {
        PageId = pageId;
        await GetPageData();
    }

    private async Task GetPageData()
    {
        var searchItem = new NewsSearchItem()
        {
            CategoryId = int.Parse(Id),
            HasPaging = true,
            ItemPerPage = 5,
            PageId = PageId,
            Title = Title
        };
        var response = await _http.PostAsJsonAsync(Const.ApiSiteUrl + "/api/FilterNews", searchItem);
        NewsModel = await response.Content.ReadFromJsonAsync<PagedResult<NewsDto, NewsSearchItem>>();
        PageCount = NewsModel.CountAll / NewsModel.ItemPerPage;
    }
}
