@using MyCms.Domain.Dto
@using MyCms.WebApp.Extensions
@using MyCms.WebApp.Models


<div class="col-md-6">
    <div class="title-wrap title-wrap--line">
        <h3 class="section-title">@CategoryTitle</h3>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <article class="entry thumb thumb--size-2">
                <div class="entry__img-holder thumb__img-holder"
                     style="background-image: url(@(FirstNews.ImageName!=null?Const.ApiSiteUrl+"/"+Const.NewsImageLocation+"/"+FirstNews.ImageName:"img/NewsImage/no-image-available.png"));">
                    <div class="bottom-gradient"></div>
                    <div class="thumb-text-holder thumb-text-holder--1">
                        <h2 class="thumb-entry-title">
                            <a href="/NewsDetails/@FirstNews.Id">@FirstNews.Title</a>
                        </h2>
                        <ul class="entry__meta">
                            <li class="entry__meta-date">
                                @*@FirstNews.CreateAt.ToShamsi()*@
                            </li>
                        </ul>
                    </div>
                    <a href="/NewsDetails/@FirstNews.Id" class="thumb-url"></a>
                </div>
            </article>
        </div>
        <div class="col-lg-6">
            <ul class="post-list-small post-list-small--dividers post-list-small--arrows mb-24">
                @if (NewsResult.Items.Count > 1)
                {
                    @foreach (var item in NewsResult.Items.Skip(1))
                    {
                        <CategoryTopFiveNewsDetails NewsDto="@item"></CategoryTopFiveNewsDetails>
                    }
                }
            </ul>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int CategoryId { get; set; }

    [Parameter]
    public string CategoryTitle { get; set; }

    private PagedResult<NewsDto, NewsSearchItem> NewsResult { get; set; } = new PagedResult<NewsDto, NewsSearchItem>() { Items = new List<NewsDto>() };
    private NewsDto FirstNews { get; set; } = new NewsDto();

    protected override async Task OnInitializedAsync()
    {
        var searchItem = new NewsSearchItem()
        {
            HasPaging = true,
            CategoryId = CategoryId,
            ItemPerPage = 5,
            PageId = 1,
        };
        var response = await _http.PostAsJsonAsync(Const.ApiSiteUrl + "/api/FilterNews", searchItem);
        NewsResult = await response.Content.ReadFromJsonAsync<PagedResult<NewsDto, NewsSearchItem>>();
        if (NewsResult != null)
        {
            if (NewsResult.Items.Any())
            {
                FirstNews = NewsResult.Items.FirstOrDefault();
            }
        }
    }
}
